---
- hosts: localhost
  vars_prompt:
    - name: user_password
      prompt: What is the user password?
      private: yes
  vars:
    encrypted_root: yes
    encrypted_boot: yes
    encrypted_keyfile: /etc/keyfile
    user_name: kieran
    system_locale: en_CA.UTF-8
    system_timezone: America/Toronto
    country_code: CA
    root_partition: /dev/nvme0n1p2
    
  handlers:
    - name: refresh initcpio
      command: mkinitcpio -P

    - name: configure grub
      command: grub-mkconfig -o /boot/grub/grub.cfg

    - name: install grub
      command: grub-install {{ boot_device|default('') }}

    - name: reload print service
      service: name=org.cups.cupsd state=reloaded
      
  tasks:
    - name: check for efi
      stat: path=/sys/firmware/efi
      register: sys_firmware_efi

    - name: configure pacman
      copy: src=pacman.conf dest=/etc/pacman.conf
      tags:
        - pacman

    - name: refresh mirrorlist
      shell: curl -L "$URL" | sed s/^#// | rankmirrors - > /etc/pacman.d/mirrorlist
      environment:
        URL: https://www.archlinux.org/mirrorlist/?country={{ country_code }}
      tags:
        - mirrorlist
        - pacman
        - std

    - name: setup virtual console
      copy: src=vconsole.conf dest=/etc/
      tags:
        - std

    - name: setup system locale
      locale_gen: name={{ system_locale }}
      tags:
        - locale
        - stdnn

    - name: set system locale
      template: src=locale.conf.j2 dest=/etc/locale.conf
      tags:
        - locale
        - std

    - name: set timezone
      file: src=/usr/share/zoneinfo/{{ system_timezone }} dest=/etc/localtime state=link
      
    - name: automatically clean up the pacman cache
      copy: src=paccache.hook dest=/etc/pacman.d/hooks/

    - name: update system
      pacman:
        update_cache: yes
        upgrade: yes
      tags:
        - std
        - update

    - name: install grub
      pacman: name=grub
      notify:
        - install grub
        - configure grub

    - name: install basic packages
      pacman:
        name:
          - smartmontools
          - cronie
          - pacserve
          
    - name: start basic services
      service: name={{ item }} enabled=yes state=started
      loop:
        - smartd
        - cronie
        - fstrim.timer
        - pacserve

    - name: relax the umask
      copy: src=umask.sh dest=/etc/profile.d/

    - name: configure the encrypted root device
      crypttab:
        path: /etc/crypttab.initramfs
        name: root
        backing_device: '{{ root_partition }}'
        state: present
        opts: discard
        password: '{{ encrypted_keyfile|default("none") }}'
      when: encrypted_root
      notify:
        - refresh initcpio
      tags:
        - cryptroot

    - name: protect the keyfile from being snooped from the initramfs
      shell: chmod o-r /boot/initramfs-*.img
      when: encrypted_boot
      tags:
        - cryptroot
      
    - name: configure the initcpio
      template: src=mkinitcpio.conf.j2 dest=/etc/mkinitcpio.conf
      notify:
        - refresh initcpio
      tags:
        - std
        - cryptroot

    - name: enable encrypted boot parition support in grub
      lineinfile:
        path: /etc/default/grub
        line: GRUB_ENABLE_CRYPTODISK=y
        regexp: GRUB_ENABLE_CRYPTODISK=
      when: encrypted_boot
      notify:
        - install grub
      tags:
        - cryptroot

    - name: install user programs
      pacman:
        name:
          - base
          - base-devel
          - linux-zen
          - linux-zen-headers
          - base-devel
          - bash-completion
          - pacman-contrib
          - moreutils
          - mlocate
          - ripgrep
          - git
          - sshfs
          - openssh
          - pkgfile
          - ccid
          - hub
          - thefuck
          - watchman
          - udiskie
          - python
          - python-pip
          - nodejs
          - npm
          - go
          - rust
          - cmake
          - clang
          
          - emacs
          - xclip
          - shellcheck
          - aspell
          - aspell-en
          - go-tools
          - flake8
          - autopep8
          - yapf
          - ipython
          - python-jedi
          - python-rope
          - python-virtualenv
          - prettier
          - bear
          - gocode-git
      tags:
        - user

    - name: enable user services
      service: name={{ item }} enabled=yes state=started
      loop:
        - pcscd
        - updatedb.timer
      tags:
        - user

    - name: configure sudo
      copy:
        src: sudo_config
        dest: /etc/sudoers.d/
        mode: 0440
        validate: /usr/sbin/visudo -cf %s
      become: yes
      tags:
        - user

    - name: create admin user
      user: name={{ user_name }} groups=wheel password={{ user_password|password_hash('sha512') }}
      register: admin
      tags:
        - user

    - name: lock root account
      user: name=root password_lock=yes
      tags:
        - user

    - name: install dotfiles
      copy:
        src: home/
        dest: '{{ admin.home }}/'
        owner: '{{ admin.name }}'
        group: '{{ admin.group }}'
        mode: preserve
        force: yes
      tags:
        - user

    - name: install graphical programs
      pacman:
        name: 
          - lightdm
          - lightdm-gtk-greeter
          - syncthing-gtk
          - qbittorent
          - kdeconnect
          - i3-gaps
          - i3blocks
          - i3lock
          - i3status
          - xorg
          - xterm
          - compton
          - xss-lock
          - feh
          - dunst
          - scrot
          - xdotool
          - dex
          - dmenu
          - terminux-font
          - arandr
          - redshift
          - python-xdg
          - xclip

          - chromium
          - ttf-liberation
          - noto-fonts
          - libu2f-host

          # - chromium-widevine

      tags:
        - graphical

    - name: configure natural scrolling
      copy: src=30-touchpad.conf dest=/etc/X11/xorg.conf.d/
      tags:
        - graphical

    - name: start display manager
      service: name=lightdm enabled=yes state=started
      tags:
        - graphical

    - name: install packages for laptop
      pacman:
        name:
          - chrony
          - tlp
          - networkmanager
      tags:
        - laptop

    - name: start laptop services
      service: name={{ item }} enabled=yes state=started
      loop:
        - chronyd
        - NetworkManager

    - name: enable tlp
      service: name=tlp enabled=yes state=started
      tags:
        - laptop
        - tlp

    - name: enable tlp on sleep
      service: name=tlp-sleep enabled=yes
      tags:
        - laptop
        - tlp

    - name: disable automatic rfkill service
      systemd: name=systemd-rfkill.service masked=yes
      tags:
        - laptop
        - tlp

    - name: disable automatic rfkill socket
      systemd: name=systemd-rfkill.socket masked=yes
      tags:
        - laptop
        - tlp
      
    - name: install printer software
      pacman:
        name:
          - cups
          - ghostscript
          - foomatic-db
          - sane
      tags:
        - printer

    - name: add wheel group to cups admin list
      lineinfile:
        path: /etc/cups/cups-files.conf
        regexp: ^SystemGroup
        line: SystemGroup sys root wheel
      notify:
        - reload print service
      tags:
        - printer

    - name: enable printer service
      service: name=org.cups.cupsd enabled=yes state=started
      tags:
        - printer

    - name: install postgres
      package: name=postgresql
    - name: set nocow on postgres folder
      file:
        path: /var/lib/postgres/data/
        attributes: +C
    - name: instantiate postgres database
      command: sudo -u postgres initdb -A pam -D /var/lib/postgres/data/ creates=postgresql.conf
    
